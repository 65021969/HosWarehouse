const requestStatusModel = require("../models/requestStatusModel");

exports.getAllRequestsWithUser = async (req, res) => {
  try {
    const requests = await requestStatusModel.getAllRequestsWithUser();
    res.json(requests);
  } catch (err) {
    console.error("‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    res.status(500).json({ error: "‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
  }
};

exports.updateRequestStatus = async (req, res) => {
  const { request_id } = req.params;
  const { newStatus } = req.body;

  try {
    const updated = await requestStatusModel.updateRequestStatus(request_id, newStatus);
    if (!updated) return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠" });
    res.json({ message: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" });
  } catch (err) {
    console.error("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    res.status(500).json({ error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" });
  }
};

exports.getRequestWithDetails = async (req, res) => {
  const { request_id } = req.params;
  try {
    const request = await requestStatusModel.getRequestById(request_id);
    const details = await requestStatusModel.getRequestDetails(request_id);

    // ‚ùå ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏° ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤ frontend ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏¢
    // if (!request) return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠" });

    // ‚úÖ ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà: ‡∏™‡πà‡∏á response ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏™‡∏°‡∏≠‡πÅ‡∏°‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ request
    res.json({
      request: request || { request_status: 'pending' }, // ‡πÉ‡∏´‡πâ fallback status
      details: details || [],
    });
  } catch (err) {
    console.error("‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    res.status(500).json({ error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ" });
  }
};


exports.updateRequestDetailStatus = async (req, res) => {
  const { request_id } = req.params;
  const { detailId, newStatus } = req.body;
  console.log("üì• ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ updateRequestDetailStatus");
  console.log("‚û°Ô∏è request_id:", request_id);
  console.log("‚û°Ô∏è detailId:", detailId);
  console.log("‚û°Ô∏è newStatus:", newStatus);
  try {
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
    const updated = await requestStatusModel.updateRequestDetailStatus(detailId, newStatus);
    if (!updated) return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏¢‡πà‡∏≠‡∏¢" });

    // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô (option)
    // await requestStatusModel.updateAllRequestDetailsStatus(request_id, newStatus);

    // ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const details = await requestStatusModel.getRequestDetails(request_id);

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏ß‡∏°
    const statusSteps = ['pending', 'preparing', 'delivering', 'completed'];

    const indexes = details.map(d => statusSteps.indexOf(d.request_detail_status)).filter(i => i !== -1);
    if (indexes.length === 0) {
      return res.status(400).json({ error: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
    }
    const minIndex = Math.min(...indexes);
    const overallStatus = statusSteps[minIndex];

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏ß‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏´‡∏•‡∏±‡∏Å
    await requestStatusModel.updateRequestStatus(request_id, overallStatus);

    res.json({ message: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏¢‡πà‡∏≠‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", overallStatus, details });
  } catch (err) {
    console.error("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏¢‡πà‡∏≠‡∏¢‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    res.status(500).json({ error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" });
  }
};


