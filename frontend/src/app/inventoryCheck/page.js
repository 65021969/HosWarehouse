"use client";
import { useEffect, useState } from "react";
import styles from "./page.module.css";
import axiosInstance from '../utils/axiosInstance';
import Link from "next/link";
import { connectSocket, disconnectSocket, sendMessage, joinRoom } from '../utils/socket';
export default function InventoryCheck() {

  const [filter, setFilter] = useState();
  const [category, setCategory] = useState();
  const [unit, setUnit] = useState();
  const [storage, setStorage] = useState();
  //API//
  const [inventoryData, setInventoryData] = useState([]);
  //API//
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 9; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
  const handleFilterChange = (event) => {
    setFilter(event.target.value);
  };

  const handleCategoryChange = (event) => {
    setCategory(event.target.value);
  };

  const handleUnitChange = (event) => {
    setUnit(event.target.value);
  };

  const handleStorageChange = (event) => {
    setStorage(event.target.value);
  };

  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  // const inventoryData = [
  //   {
  //     id: 1,
  //     image: "https://example.com/bandage.jpg",
  //     category: "‡∏ú‡πâ‡∏≤‡∏û‡∏±‡∏ô‡πÅ‡∏ú‡∏•",
  //     type: "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå",
  //     quantity: 100,
  //     unit: "‡∏Å‡∏•‡πà‡∏≠‡∏á",
  //     status: "‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
  //     storage: "‡∏Ñ‡∏•‡∏±‡∏á‡∏Å‡∏•‡∏≤‡∏á",
  //     lastUpdated: "2025-12-31",
  //     action: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö",
  //   },

  // ];


  const currentItems = inventoryData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);

  const handlePrevPage = () => {
    if (currentPage > 1) {
      setCurrentPage(currentPage - 1);
    }
  };

  const handleNextPage = () => {
    if (currentPage * itemsPerPage < inventoryData.length) {
      setCurrentPage(currentPage + 1);
    }
  };


  ///////////////////// API///////////////////////////
  useEffect(() => {
    const socket = connectSocket(); // ‡πÑ‡∏î‡πâ socket ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤

    socket.emit('requestInventoryData'); // üëà ‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å backend

    socket.on('itemsData', (items) => {
      console.log('üì¶ Received inventory:', items);
      setInventoryData(items); // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô UI
    });

    return () => {
      disconnectSocket();
    };
  }, []);

  console.log(inventoryData.map(item => item.id));
  return (
    <div className={styles.mainHome}>
      {/* ‡πÅ‡∏ñ‡∏ö‡∏ö‡∏ô */}
      <div className={styles.bar}>
        <ul className={styles.navList}>
          <li className={styles.navItem}>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡∏Ñ‡∏•‡∏±‡∏á</li>
          <li className={styles.navItem}>‡∏¢‡∏≤</li>
          <li className={styles.navItem}>‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå</li>
          <li className={styles.navItem}>‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå</li>
          <li className={styles.navItem}>‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå</li>
          <li className={styles.navItem}>‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</li>
        </ul>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á infoContainer */}
      <div className={styles.infoContainer}>
        {/* ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á */}
        <div className={styles.filterContainer}>
          <div className={styles.filterGroup}>
            <label htmlFor="category" className={styles.filterLabel}>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</label>
            <select
              id="category"
              className={styles.filterSelect}
              value={category}
              onChange={handleCategoryChange}>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>
              <option value="‡∏¢‡∏≤">‡∏¢‡∏≤</option>
              <option value="‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå">‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå</option>
              <option value="‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå">‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå</option>
              <option value="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå">‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå</option>
              <option value="‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ">‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
            </select>
          </div>

          <div className={styles.filterGroup}>
            <label htmlFor="unit" className={styles.filterLabel}>‡∏´‡∏ô‡πà‡∏ß‡∏¢:</label>
            <select
              id="unit"
              className={styles.filterSelect}
              value={unit}
              onChange={handleUnitChange}>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢</option>
              <option value="‡∏Ç‡∏ß‡∏î">‡∏Ç‡∏ß‡∏î</option>
              <option value="‡πÅ‡∏ú‡∏á">‡πÅ‡∏ú‡∏á</option>
              <option value="‡∏ä‡∏∏‡∏î">‡∏ä‡∏∏‡∏î</option>
              <option value="‡∏ä‡∏¥‡πâ‡∏ô">‡∏ä‡∏¥‡πâ‡∏ô</option>
            </select>
          </div>

          <div className={styles.filterGroup}>
            <label htmlFor="storage" className={styles.filterLabel}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö:</label>
            <select
              id="storage"
              className={styles.filterSelect}
              value={storage}
              onChange={handleStorageChange}>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö</option>
              <option value="‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≤">‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≤</option>
              <option value="‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤">‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</option>
              <option value="‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå">‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå</option>
            </select>
          </div>

          {/* ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
          <div className={styles.filterGroupSearch}>
            <label htmlFor="filter" className={styles.filterLabel}></label>
            <input
              type="text"
              id="filter"
              className={styles.filterInput}
              value={filter}
              onChange={handleFilterChange}
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..."
            />
          </div>
        </div>
        {/* ‡πÅ‡∏ñ‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢ Excel */}
        <div className={`${styles.tableGrid} ${styles.tableHeader}`}>
          <div className={styles.headerItem}>No.</div>
          <div className={styles.headerItem}>‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</div>
          <div className={styles.headerItem}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
          <div className={styles.headerItem}>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</div>
          <div className={styles.headerItem}>‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠</div>
          <div className={styles.headerItem}>‡∏´‡∏ô‡πà‡∏ß‡∏¢</div>
          <div className={styles.headerItem}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</div>
          <div className={styles.headerItem}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö</div>
          <div className={styles.headerItem}>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</div>
          <div className={styles.headerItem}>‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</div>
        </div>
        {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á */}
        <div className={styles.inventory}>
          {inventoryData.map((item) => (
            <div className={`${styles.tableGrid} ${styles.tableRow}`} key={item.item_id}>
              <div className={styles.tableCell}>{item.item_id}</div>
              <div className={styles.tableCell}>
                <img
                  src={item.item_img}
                  alt={item.item_category}
                  className={styles.imageCell}
                  style={{ width: '70px', height: '70px', objectFit: 'cover' }} // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                />
              </div>
              <div className={styles.tableCell}>{item.item_name}</div>
              <div className={styles.tableCell}>{item.item_category}</div>
              <div className={styles.tableCell}>{item.item_qty}</div>
              <div className={styles.tableCell}>{item.item_unit}</div>
              <div className={styles.tableCell}>‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</div>
              <div className={styles.tableCell}>{item.item_location}</div>
              <div className={styles.tableCell}>
                {new Date(item.item_update).toLocaleString('th-TH', {
                  timeZone: 'Asia/Bangkok',
                  year: 'numeric',
                  month: '2-digit',
                  day: '2-digit',
                  hour: '2-digit',
                  minute: '2-digit',
                })}
              </div>
              <div className={styles.tableCell}>
                <Link href={`/inventoryDetail/${item.item_id}`} className={styles.actionButton}>
                  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
                </Link>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className={styles.pagination}>
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
        <button
          className={styles.prevButton}
          onClick={handlePrevPage}
          disabled={currentPage === 1}>
          ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        </button>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ */}
        <button
          className={styles.nextButton}
          onClick={handleNextPage}
          disabled={currentPage * itemsPerPage >= inventoryData.length}>
          ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        </button>
      </div>

    </div>
  );
}
