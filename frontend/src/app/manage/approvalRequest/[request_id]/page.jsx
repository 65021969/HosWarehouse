'use client';

import { useEffect, useState, useMemo } from 'react';
import { useParams, useRouter } from 'next/navigation';
import axiosInstance from '../../../utils/axiosInstance';
import Swal from 'sweetalert2';
import Image from 'next/image';
import styles from './page.module.css';

// Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function ItemImage({ item_img, alt }) {
    const defaultImg = "http://localhost:5000/public/defaults/landscape.png";
    const [imgSrc, setImgSrc] = useState(
        item_img && typeof item_img === "string" && item_img.trim() !== ""
            ? `http://localhost:5000/uploads/${item_img}`
            : defaultImg
    );

    return (
        <Image
            src={imgSrc}
            alt={alt || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏†‡∏≤‡∏û"}
            width={40}
            height={40}
            style={{ objectFit: "cover", borderRadius: 8 }}
            onError={() => setImgSrc(defaultImg)}
        />
    );
}

// Main Component: ApprovalDetailPage
export default function ApprovalRequestPage() {
    const { request_id } = useParams();
    const router = useRouter();
    const [request, setRequest] = useState(null);
    const [details, setDetails] = useState([]);
    // draftDetails ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏±‡πâ‡∏á status, reason, ‡πÅ‡∏•‡∏∞ approved_qty
    const [draftDetails, setDraftDetails] = useState({});
    const [loading, setLoading] = useState(true);
    const [currentPage, setCurrentPage] = useState(1);
    const itemsPerPage = 8;

    // Map ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    const statusMap = {
        waiting_approval_detail: '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
        approved: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß',
        rejected: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏•‡πâ‡∏ß',
        waiting_approval: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
        approved_all: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        rejected_all: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        approved_partial: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô',
        rejected_partial: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô',
        approved_partial_and_rejected_partial: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô',
        preparing: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°',
        delivering: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡∏™‡πà‡∏á',
        completed: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
        canceled: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠',
        pending: '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ (‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°)',
    };

    // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ
    const disabledOverallStatuses = ["preparing", "delivering", "completed", "canceled", "approved_all", "rejected_all", "approved_partial", "rejected_partial", "approved_partial_and_rejected_partial"];

    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á user_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö Authentication ‡∏à‡∏£‡∏¥‡∏á)
    useEffect(() => {
        if (typeof window !== 'undefined' && !localStorage.getItem('user_id')) {
            localStorage.setItem('user_id', '999');
            localStorage.setItem('user_fname', '‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á');
            localStorage.setItem('user_lname', '‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥');
        }
    }, []);

    // Fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠ request_id ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
    useEffect(() => {
        if (request_id) fetchRequestDetail();
    }, [request_id]);

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏Ç‡∏≠
    const fetchRequestDetail = async () => {
        setLoading(true);
        try {
            const res = await axiosInstance.get(`/approval/${request_id}`);
            setRequest(res.data.request);
            setDetails(res.data.details);
            // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï draftDetails
            setDraftDetails({});
            setCurrentPage(1);
        } catch (err) {
            console.error("Error fetching request detail:", err);
            Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ', 'error');
        } finally {
            setLoading(false);
        }
    };

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô draftDetails
    const updateDraft = (id, newStatus, newApprovedQty, reason = '') => {
        setDraftDetails(prev => ({
            ...prev,
            [id]: {
                status: newStatus,
                approved_qty: newApprovedQty, // ‡πÄ‡∏û‡∏¥‡πà‡∏° approved_qty
                reason: reason || null
            }
        }));
    };

    // Handler ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    const handleApproveOne = (detail) => {
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠
        updateDraft(detail.request_detail_id, 'approved', detail.requested_qty);
    };

    // Handler ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    const handleRejectOne = async (detail) => {
        const { value: reason } = await Swal.fire({
            title: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ',
            input: 'textarea',
            inputLabel: '‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•',
            inputPlaceholder: '‡πÄ‡∏ä‡πà‡∏ô ‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏´‡∏°‡∏î, ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏°',
            showCancelButton: true,
            confirmButtonText: '‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
            cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
        });
        if (reason === undefined) return;
        // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô 0
        updateDraft(detail.request_detail_id, 'rejected', 0, reason);
    };

    // Handler ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô input field
    const handleApprovedQtyChange = (id, value, requestedQty) => {
        const parsedValue = parseInt(value, 10);
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏ö
        const newQty = isNaN(parsedValue) || parsedValue < 0 ? 0 : parsedValue;
        // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠
        const finalQty = Math.min(newQty, requestedQty);

        setDraftDetails(prev => {
            const currentDraft = prev[id] || {};
            return {
                ...prev,
                [id]: {
                    ...currentDraft,
                    status: currentDraft.status || 'waiting_approval_detail', // ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                    approved_qty: finalQty, // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                }
            };
        });
    };

    // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const handleSaveDraft = async () => {
        // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á approved_qty
        const changesToSave = Object.keys(draftDetails)
            .filter(detailId => {
                const originalDetail = details.find(d => d.request_detail_id === parseInt(detailId, 10));
                const draft = draftDetails[detailId];
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ ‡∏´‡∏£‡∏∑‡∏≠ approved_qty ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ
                return (
                    draft.status !== originalDetail?.approval_status ||
                    draft.approved_qty !== originalDetail?.approved_qty
                );
            })
            .map(detailId => {
                const originalDetail = details.find(d => d.request_detail_id === parseInt(detailId, 10));
                const draft = draftDetails[detailId];
                return {
                    request_detail_id: parseInt(detailId, 10),
                    status: draft.status,
                    approved_qty: draft.approved_qty, // ‡∏™‡πà‡∏á approved_qty ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
                    note: draft.reason || null,
                    old_status: originalDetail?.approval_status, // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏° (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥)
                };
            });

        if (changesToSave.length === 0) {
            Swal.fire('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å', 'info');
            return;
        }

        if (request && disabledOverallStatuses.includes(request.request_status)) {
            Swal.fire('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ', '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß', 'warning');
            return;
        }

        const confirm = await Swal.fire({
            title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å',
            text: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å',
            cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
        });
        if (!confirm.isConfirmed) return;

        setLoading(true);
        try {
            const userId = parseInt(localStorage.getItem('user_id'), 10);
            await axiosInstance.put(`/approval/${request_id}/bulk-update`, { updates: changesToSave, userId });
            Swal.fire('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß', 'success');
            await fetchRequestDetail(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        } catch (err) {
            console.error("Error saving draft:", err);
            const errorMessage = err.response?.data?.message || err.response?.data?.error || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ';
            Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', errorMessage, 'error');
        } finally {
            setLoading(false);
        }
    };

    // ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤
    const indexOfLastItem = currentPage * itemsPerPage;
    const indexOfFirstItem = indexOfLastItem - itemsPerPage;
    const currentItems = details.slice(indexOfFirstItem, indexOfLastItem);
    const totalPages = Math.ceil(details.length / itemsPerPage);

    // ‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πà‡∏≤‡∏á‡πÜ
    const summary = useMemo(() => {
        const counts = { totalItems: 0, approvedCount: 0, rejectedCount: 0, pendingCount: 0 };
        details.forEach(d => {
            const currentStatus = draftDetails[d.request_detail_id]?.status || d.approval_status;
            counts.totalItems += d.requested_qty;
            if (currentStatus === 'approved') counts.approvedCount += 1;
            else if (currentStatus === 'rejected') counts.rejectedCount += 1;
            else counts.pendingCount += 1;
        });
        return counts;
    }, [details, draftDetails]);


    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isItemDisabled = (detail) => {
        const currentStatus = draftDetails[detail.request_detail_id]?.status || detail.approval_status;
        // ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏£‡∏ß‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô disabledOverallStatuses
        if (request && disabledOverallStatuses.includes(request.request_status)) return true;
        // ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡πà‡∏≠‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' ‡πÅ‡∏•‡πâ‡∏ß
        return currentStatus !== 'waiting_approval_detail';
    };

    // Render Logic
    if (loading) return <p className={styles.loading}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
    if (!request) return <p className={styles.error}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠</p>;

    return (
        <div className={styles.pageBackground}>
            <div className={styles.container}>
                <h2 className={styles.title}>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏Ç‡∏≠: {request.request_code}</h2>

                <div className={styles.infoGrid}>
                    <div className={styles.infoLeft}>
                        <div><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠:</strong> {new Date(request.request_date).toLocaleDateString('th-TH')}</div>
                        <div><strong>‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á:</strong> {request.request_due_date ? new Date(request.request_due_date).toLocaleDateString('th-TH') : '-'}</div>
                        <div><strong>‡∏ú‡∏π‡πâ‡∏Ç‡∏≠:</strong> {request.user_name} ({request.department})</div>
                        <div><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏≥‡∏Ç‡∏≠:</strong> {request.request_type === 'borrow' ? '‡∏¢‡∏∑‡∏°' : '‡πÄ‡∏ö‡∏¥‡∏Å'}</div>
                        <div><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> <span className={styles.status}>{statusMap[request.request_status]}</span></div>
                        <div><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô:</strong> {request.is_urgent ? '‡∏î‡πà‡∏ß‡∏ô' : '‡∏õ‡∏Å‡∏ï‡∏¥'}</div>
                        <div className={styles.summary}>
                            ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {details.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ({summary.totalItems} ‡∏ä‡∏¥‡πâ‡∏ô) |
                            ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥: {summary.approvedCount} |
                            ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò: {summary.rejectedCount} |
                            ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥: {summary.pendingCount}
                        </div>
                    </div>
                    <div className={styles.noteBox}>
                        <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong>
                        <div>{request.request_note || '-'}</div>
                    </div>
                </div>

                <h3 className={styles.subtitle}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ç‡∏≠:</h3>
                <table className={styles.table}>
                    <thead>
                        <tr>
                            <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                            <th>‡∏£‡∏π‡∏õ</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏™‡∏î‡∏∏</th>
                            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠</th>
                            <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                            <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</th> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ô‡∏µ‡πâ */}
                            <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody>
                        {currentItems.map((d, i) => {
                            const draft = draftDetails[d.request_detail_id];
                            const currentItemStatus = draft?.status || d.approval_status;
                            const statusText = statusMap[currentItemStatus] || currentItemStatus;
                            const isItemDisabledForApproval = isItemDisabled(d); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

                            // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á input
                            const displayApprovedQty = draft?.approved_qty !== undefined
                                ? draft.approved_qty
                                : d.approved_qty !== undefined
                                    ? d.approved_qty
                                    : d.requested_qty; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠

                            return (
                                <tr key={d.request_detail_id}>
                                    <td data-label="‡∏•‡∏≥‡∏î‡∏±‡∏ö">{indexOfFirstItem + i + 1}</td>
                                    <td data-label="‡∏£‡∏π‡∏õ"><ItemImage item_img={d.item_img} alt={d.item_name} /></td>
                                    <td data-label="‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏™‡∏î‡∏∏">{d.item_name}</td>
                                    <td data-label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠">{d.requested_qty}</td>
                                    <td data-label="‡∏´‡∏ô‡πà‡∏ß‡∏¢">{d.item_unit}</td>
                                    <td data-label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞">{statusText}</td>
                                    <td data-label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥">
                                        {/* ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ */}
                                        <input
                                            type="number"
                                            value={displayApprovedQty}
                                            onChange={(e) => handleApprovedQtyChange(d.request_detail_id, e.target.value, d.requested_qty)}
                                            min="0"
                                            max={d.requested_qty}
                                            className={styles.approvedQtyInput}
                                            // ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏ß‡∏°‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡πà‡∏≠‡∏¢‡∏ñ‡∏π‡∏Å‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
                                            disabled={isItemDisabledForApproval || currentItemStatus === 'approved' || currentItemStatus === 'rejected'}
                                        />
                                    </td>
                                    <td data-label="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£">
                                        {isItemDisabledForApproval ? (
                                            <>
                                                <button
                                                    disabled
                                                    className={styles.disabledButton}
                                                    title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏•‡πâ‡∏ß"
                                                >
                                                    ‚úÖ
                                                </button>
                                                <button
                                                    disabled
                                                    className={styles.disabledButton}
                                                    title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏•‡πâ‡∏ß"
                                                >
                                                    ‚ùå
                                                </button>
                                            </>
                                        ) : (
                                            <>
                                                <button
                                                    onClick={() => handleApproveOne(d)} // ‡∏™‡πà‡∏á detail object ‡πÑ‡∏õ
                                                    className={styles.activeButton}
                                                    title="‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ"
                                                >
                                                    ‚úÖ
                                                </button>
                                                <button
                                                    onClick={() => handleRejectOne(d)} // ‡∏™‡πà‡∏á detail object ‡πÑ‡∏õ
                                                    className={styles.activeButton}
                                                    title="‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ"
                                                >
                                                    ‚ùå
                                                </button>
                                            </>
                                        )}
                                    </td>
                                </tr>
                            );
                        })}
                        {/* ‡πÅ‡∏ñ‡∏ß‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Pagination */}
                        {Array.from({ length: itemsPerPage - currentItems.length }).map((_, idx) => (
                            <tr key={`empty-${idx}`} className={styles.emptyRow}>
                                <td colSpan="8">&nbsp;</td> {/* ‡∏õ‡∏£‡∏±‡∏ö colSpan ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå */}
                            </tr>
                        ))}
                    </tbody>
                </table>

                <div className={styles.actions}>
                    <button
                        className={styles.saveButton}
                        onClick={handleSaveDraft}
                        disabled={Object.keys(draftDetails).length === 0 || (request && disabledOverallStatuses.includes(request.request_status))}
                    >
                        üíæ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                    </button>
                    <button
                        className={styles.cancelButton}
                        onClick={() => router.push('/manage/approvalRequest')}
                    >
                        ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                </div>

                <div className={styles.pagination}>
                    <button
                        disabled={currentPage === 1}
                        onClick={() => setCurrentPage(prev => prev - 1)}
                        className={styles.pageButton}
                    >
                        ‚¨ÖÔ∏è ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                    </button>
                    <span>‡∏´‡∏ô‡πâ‡∏≤ {currentPage} / {totalPages}</span>
                    <button
                        disabled={currentPage === totalPages}
                        onClick={() => setCurrentPage(prev => prev + 1)}
                        className={styles.pageButton}
                    >
                        ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚û°Ô∏è
                    </button>
                </div>
            </div>
        </div>
    );
}
